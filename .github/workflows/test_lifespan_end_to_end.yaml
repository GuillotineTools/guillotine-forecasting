name: Test Lifespan Question End-to-End

on:
  workflow_dispatch:
  workflow_call:

jobs:
  test_lifespan_forecast:
    runs-on: ubuntu-latest
    timeout-minutes: 25  # 25 minute timeout for comprehensive test

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Set timezone to JST
        run: |
          sudo timedatectl set-timezone Asia/Tokyo
          echo "Timezone set to: $(date)"

      - name: Run end-to-end lifespan forecast test
        run: |
          echo "=== Starting End-to-End Lifespan Forecast Test ==="
          echo "This will test the complete forecasting process on a lifespan question"
          echo "Expected duration: 15-25 minutes"
          echo "Process: Research ‚Üí Individual Forecasts ‚Üí Synthesis ‚Üí Final Prediction"
          echo ""

          # Run the comprehensive test
          poetry run python test_lifespan_question.py
        env:
          GITHUB_ACTIONS: "true"
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          OPENAI_DISABLE_TRACE: "true"

      - name: Upload comprehensive test outputs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lifespan-test-outputs-${{ github.run_number }}
          path: lifespan_test_output/
          retention-days: 7

      - name: Display test completion status
        run: |
          echo "=== Lifespan End-to-End Test Status ==="
          if [ -d "lifespan_test_output" ]; then
            echo "‚úÖ Test outputs generated successfully"
            echo "üìÅ Files created:"
            ls -la lifespan_test_output/
            echo ""
            echo "üìã Check the test_summary.md file for complete results"
          else
            echo "‚ùå No outputs generated - test may have failed"
          fi