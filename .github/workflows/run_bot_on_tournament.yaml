name: Forecast on new AI tournament questions

on:
  workflow_dispatch:
  schedule:
    - cron: "*/20 * * * *" # runs every 20 minutes. Make sure to skip already forecasted questions!

# Add concurrency group to prevent parallel runs
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false


# Daily job to run the simple forecast bot
jobs:
  forecast_job:
    runs-on: ubuntu-latest # determines the machine that will run the job - keep as is
    steps: # sets up the steps that will be run in order
      # setup repository with all necessary dependencies - keep as is
      - name: Check out repository
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      # Install uv for fast dependency management
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      # Set up environment and dependencies
      - name: Set up environment and install dependencies
        run: |
          echo "=== Setting up enhanced forecasting environment ==="
          uv venv
          source .venv/bin/activate

          echo "=== Installing dependencies with uv ==="
          uv pip install forecasting-tools python-dotenv asyncio

          echo "=== Environment setup complete ==="
      # Configure Git for output commits
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          echo "=== Git configured for output commits ==="

      - name: Run Enhanced Tournament Bot
        run: |
          source .venv/bin/activate
          echo "=== Starting enhanced tournament bot run at $(date) ==="
          echo "=== Using enhanced fallback LLM system ==="

          # Run the enhanced tournament bot with real questions
          python test_real_questions_fixed.py || echo "Enhanced tournament failed, continuing..."

          echo "=== Enhanced tournament bot run completed at $(date) ==="

      # Commit and push outputs to repository
      - name: Commit and Push Tournament Outputs
        if: always()
        run: |
          git add --all
          git add outputs/
          git add brightline_tournament_info_*.md
          git add real_question_multiforecaster_*.md

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No new outputs to commit"
          else
            echo "=== Committing new tournament outputs ==="
            git commit -m "$(cat <<'EOF'
            Auto-commit: Enhanced Tournament Forecasting Results

            ðŸ“Š Complete multiforecaster process with research â†’ forecasts â†’ synthesis
            ðŸ¤– Enhanced fallback LLM system with detailed model logging
            ðŸŽ¯ Real tournament questions processed
            ðŸ“‹ Comprehensive reasoning and analysis documentation

            ðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)

            Co-Authored-By: Claude <noreply@anthropic.com>
            EOF
            )"
            git push
            echo "=== Tournament outputs committed and pushed to repository ==="
          fi
      - name: Upload forecast outputs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: forecast-outputs-${{ github.run_number }}
          path: outputs/forecastoutput_*.md
          retention-days: 30
        # this reads the environment variables from the github repository.
        # Store under Settings --> Secrets and variables --> Actions
        env:
          GITHUB_ACTIONS: "true"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          METACULUS_TOKEN: ${{ secrets.METACULUS_TOKEN }} # replace this with the name of the variable under which you stored your own Metaculus token
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          PERSONAL_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          LITELLM_OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
          EXA_API_KEY: ${{ secrets.EXA_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          ASKNEWS_CLIENT_ID: ${{ secrets.ASKNEWS_CLIENT_ID }}
          ASKNEWS_SECRET: ${{ secrets.ASKNEWS_SECRET }}
          # Email notification settings
          NOTIFICATION_SENDER_EMAIL: ${{ secrets.NOTIFICATION_SENDER_EMAIL }}
          NOTIFICATION_SENDER_PASSWORD: ${{ secrets.NOTIFICATION_SENDER_PASSWORD }}
          NOTIFICATION_RECIPIENT_EMAIL: ${{ secrets.NOTIFICATION_RECIPIENT_EMAIL }}
          NOTIFICATION_SMTP_SERVER: ${{ secrets.NOTIFICATION_SMTP_SERVER || 'smtp.gmail.com' }}
          NOTIFICATION_SMTP_PORT: ${{ secrets.NOTIFICATION_SMTP_PORT || '587' }}
          # ntfy notification settings
          NTFY_TOPIC: ${{ secrets.NTFY_TOPIC || 'metaculus-bot-jsgle' }}
          # Disable OpenAI tracing to prevent API key errors
          OPENAI_DISABLE_TRACE: "true"
          OPENAI_ORGANIZATION: ""